// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: message.proto

package packet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 询问包
// 寻找目标数据，需要确切的回应消息。
type Quest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver    int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`      // 消息包版本
	Id     uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`        // 询问ID
	Hops   int32  `protobuf:"varint,3,opt,name=hops,proto3" json:"hops,omitempty"`    // 询问包跳数累计（<16）
	Algor  int32  `protobuf:"varint,4,opt,name=algor,proto3" json:"algor,omitempty"`  // 公钥算法（<16）
	Pubkey []byte `protobuf:"bytes,5,opt,name=pubkey,proto3" json:"pubkey,omitempty"` // 公钥字节序列
	Level  int32  `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`  // NAT 层级：Pub/FullC|RC|P-RC|Sym
	Kind   int32  `protobuf:"varint,7,opt,name=kind,proto3" json:"kind,omitempty"`    // 数据类别（<256）
	Index  []byte `protobuf:"bytes,8,opt,name=index,proto3" json:"index,omitempty"`   // 数据索引，最多32字节，可能含内部结构
	Size   uint32 `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`    // 数据大小（字节数），可选
}

func (x *Quest) Reset() {
	*x = Quest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quest) ProtoMessage() {}

func (x *Quest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quest.ProtoReflect.Descriptor instead.
func (*Quest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Quest) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Quest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Quest) GetHops() int32 {
	if x != nil {
		return x.Hops
	}
	return 0
}

func (x *Quest) GetAlgor() int32 {
	if x != nil {
		return x.Algor
	}
	return 0
}

func (x *Quest) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *Quest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Quest) GetKind() int32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *Quest) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *Quest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 探测包
// 探查数据的存在性，协助节点评估和补充。
// 签名为可选，
// 签名的数据为探测数据的相关信息：kind+index+size（大端序）。
type Probe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver    int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`      // 消息包版本
	Hops   int32  `protobuf:"varint,2,opt,name=hops,proto3" json:"hops,omitempty"`    // 跳数累计（<16）
	Algor  int32  `protobuf:"varint,3,opt,name=algor,proto3" json:"algor,omitempty"`  // 签名算法（<16）
	Pubkey []byte `protobuf:"bytes,4,opt,name=pubkey,proto3" json:"pubkey,omitempty"` // 签名公钥，可选
	Signd  []byte `protobuf:"bytes,5,opt,name=signd,proto3" json:"signd,omitempty"`   // 签名数据，可选
	Kind   int32  `protobuf:"varint,6,opt,name=kind,proto3" json:"kind,omitempty"`    // 数据类别（<256）
	Index  []byte `protobuf:"bytes,7,opt,name=index,proto3" json:"index,omitempty"`   // 数据索引（同询问包说明）
	Size   uint32 `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`    // 数据大小，可选
}

func (x *Probe) Reset() {
	*x = Probe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Probe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Probe) ProtoMessage() {}

func (x *Probe) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Probe.ProtoReflect.Descriptor instead.
func (*Probe) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *Probe) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Probe) GetHops() int32 {
	if x != nil {
		return x.Hops
	}
	return 0
}

func (x *Probe) GetAlgor() int32 {
	if x != nil {
		return x.Algor
	}
	return 0
}

func (x *Probe) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *Probe) GetSignd() []byte {
	if x != nil {
		return x.Signd
	}
	return nil
}

func (x *Probe) GetKind() int32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *Probe) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *Probe) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 回复包
type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver     int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`        // 消息包版本
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`          // 询问ID
	Pubkey  []byte `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`   // 公钥数据，算法与询问包相同
	Contact []byte `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"` // 连系信息（密文）
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Reply) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Reply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reply) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *Reply) GetContact() []byte {
	if x != nil {
		return x.Contact
	}
	return nil
}

// 回复包：连系信息
// 此用于编解码，作为Reply字段传输时已加密。
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hops  int32  `protobuf:"varint,1,opt,name=hops,proto3" json:"hops,omitempty"`   // 跳数累计（<16）
	Level int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"` // NAT层级（<16）
	Xnet  string `protobuf:"bytes,3,opt,name=xnet,proto3" json:"xnet,omitempty"`    // 网络协议名（websocket|dtls|tcp|udp）
	Ip    []byte `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`        // 数据节点IP
	Port  int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`   // 数据节点端口
	Fip   []byte `protobuf:"bytes,6,opt,name=fip,proto3" json:"fip,omitempty"`      // Findings服务节点IP
	Fport int32  `protobuf:"varint,7,opt,name=fport,proto3" json:"fport,omitempty"` // Findings服务节点端口
	Fkind string `protobuf:"bytes,8,opt,name=fkind,proto3" json:"fkind,omitempty"`  // 登录Findings节点的类别名
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *Contact) GetHops() int32 {
	if x != nil {
		return x.Hops
	}
	return 0
}

func (x *Contact) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Contact) GetXnet() string {
	if x != nil {
		return x.Xnet
	}
	return ""
}

func (x *Contact) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *Contact) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Contact) GetFip() []byte {
	if x != nil {
		return x.Fip
	}
	return nil
}

func (x *Contact) GetFport() int32 {
	if x != nil {
		return x.Fport
	}
	return 0
}

func (x *Contact) GetFkind() string {
	if x != nil {
		return x.Fkind
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xbf, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x70, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0xaf, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x70,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x73, 0x69, 0x67, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x5b, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x22, 0xa9, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x70, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x6e, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x6e, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x66, 0x69, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x66, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6b, 0x69, 0x6e, 0x64, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x2e, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_message_proto_goTypes = []interface{}{
	(*Quest)(nil),   // 0: Quest
	(*Probe)(nil),   // 1: Probe
	(*Reply)(nil),   // 2: Reply
	(*Contact)(nil), // 3: Contact
}
var file_message_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Probe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
